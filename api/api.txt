import flask
from flask import request, jsonify

app = flask.Flask(__name__)
app.config["DEBUG"] = True

with open(r'C:\Users\Lucas\Documents\LUCAS\TRABALHO\ENTREVISTAS\BLINTZ\word.json.txt', 'r') as json_file:

    #json_file = json.dumps(json_file)

    palavras = [x for x in json_file]

@app.route('/', methods=['GET'])
def home():
    return "<h1>Voel counter website</h1><p>This site is a prototype API for a  jow interview. It must receive a json file with words and return other json with those same words as keys and the numbers of voels as values.</p>"


@app.route('/api/v1/resources/palavras/all', methods=['GET'])
def list_array():
    return jsonify(palavras)


@app.route('/api/v1/resources/palavras', methods=['GET'])
def order_array():
    
    with open(r'C:\Users\Lucas\Documents\LUCAS\TRABALHO\ENTREVISTAS\BLINTZ\word.json.txt', 'r') as json_file:
        # input words right down
        palavras = [x for x in json_file]
        voels, vs, count = ['a', 'e', 'i', 'o', 'u'], [], 0

    # iterate array to count voels
        for w in palavras:
            
                if type(w) is not str:
                    raise TypeError('A função só aceita parametros do tipo string. Altere todos os elementos em "api.txt" para tipo string.')
                else:
                    for l in w:
                        if l in voels:
                            count += 1  # count voels
                    vs.append(count)
                    count = 0

        palavras = list(zip(palavras, vs))  # zip lists

        palavras = {x: y for x, y in sorted(palavras, key=lambda item: item[1])}  # order

        return jsonify(palavras)

app.run()